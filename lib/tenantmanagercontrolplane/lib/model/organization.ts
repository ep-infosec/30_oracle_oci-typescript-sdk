/**
 * Organizations API
 * The Organizations API allows you to consolidate multiple OCI tenancies into an organization, and centrally manage your tenancies and its resources.
 * OpenAPI spec version: 20200801
 *
 *
 * NOTE: This class is auto generated by OracleSDKGenerator.
 * Do not edit the class manually.
 *
 * Copyright (c) 2020, 2022, Oracle and/or its affiliates.  All rights reserved.
 * This software is dual-licensed to you under the Universal Permissive License (UPL) 1.0 as shown at https://oss.oracle.com/licenses/upl or Apache License 2.0 as shown at http://www.apache.org/licenses/LICENSE-2.0. You may choose either license.
 */

import * as model from "../model";
import common = require("oci-common");

/**
 * An organization entity.
 */
export interface Organization {
  /**
   * OCID of the organization.
   */
  "id": string;
  /**
   * A display name for the organization. Avoid entering confidential information.
   */
  "displayName"?: string;
  /**
   * OCID of the compartment containing the organization. Always a tenancy OCID.
   */
  "compartmentId": string;
  /**
   * The name of the tenancy that is the organization parent.
   */
  "parentName"?: string;
  /**
   * OCID of the default Universal Credits Model subscription. Any tenancy joining the organization will automatically get assigned this subscription if a subscription is not explictly assigned.
   */
  "defaultUcmSubscriptionId": string;
  /**
   * Lifecycle state of the organization.
   */
  "lifecycleState": Organization.LifecycleState;
  /**
   * Date-time when this organization was created.
   */
  "timeCreated": Date;
  /**
   * Date-time when this organization was last updated.
   */
  "timeUpdated"?: Date;
}

export namespace Organization {
  export enum LifecycleState {
    Creating = "CREATING",
    Active = "ACTIVE",
    Updating = "UPDATING",
    Deleting = "DELETING",
    Deleted = "DELETED",
    Failed = "FAILED",
    /**
     * This value is used if a service returns a value for this enum that is not recognized by this
     * version of the SDK.
     */
    UnknownValue = "UNKNOWN_VALUE"
  }

  export function getJsonObj(obj: Organization): object {
    const jsonObj = { ...obj, ...{} };

    return jsonObj;
  }
  export function getDeserializedJsonObj(obj: Organization): object {
    const jsonObj = { ...obj, ...{} };

    return jsonObj;
  }
}
