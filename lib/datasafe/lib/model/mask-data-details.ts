/**
 * Data Safe API
 * APIs for using Oracle Data Safe.
 * OpenAPI spec version: 20181201
 *
 *
 * NOTE: This class is auto generated by OracleSDKGenerator.
 * Do not edit the class manually.
 *
 * Copyright (c) 2020, 2022, Oracle and/or its affiliates.  All rights reserved.
 * This software is dual-licensed to you under the Universal Permissive License (UPL) 1.0 as shown at https://oss.oracle.com/licenses/upl or Apache License 2.0 as shown at http://www.apache.org/licenses/LICENSE-2.0. You may choose either license.
 */

import * as model from "../model";
import common = require("oci-common");

/**
 * Details to mask data.
 */
export interface MaskDataDetails {
  /**
   * The OCID of the target database to be masked. If it's not provided, the value of the
   * targetId attribute in the MaskingPolicy resource is used. The OCID of the target
   * database to be masked. If it's not provided, the value of the targetId attribute in
   * the MaskingPolicy resource is used.
   *
   */
  "targetId"?: string;
  /**
   * Indicates if the masking request is to decrypt the data values previously encrypted using Deterministic Encryption. Note that, to
   * correctly decrypt the encrypted data values, it requires the same seed value that was provided to encrypt those data values.
   *
   */
  "isDecrypt"?: boolean;
  /**
   * Indicates if the masking request is to rerun the previously failed masking steps. If a masking request is submitted with the
   * isIgnoreErrorsEnabled attribute set to true, the masking process tracks the failed masking steps. Another masking request can be
   * submitted with the isRun attribute set to true to rerun those failed masking steps. It helps save time by executing only the failed
   * masking steps and not doing the whole masking again.
   *
   */
  "isRerun"?: boolean;
  /**
   * The tablespace that should be used to create the mapping tables, DMASK objects, and other temporary tables for data masking.
   * If no tablespace is provided, the DEFAULT tablespace is used.
   *
   */
  "tablespace"?: string;
  /**
   * Indicates if the masking process should continue on hitting an error. It provides fault tolerance support and is enabled by
   * default. In fault-tolerant mode, the masking process saves the failed step and continues. You can then submit another masking
   * request (with isRerun attribute set to true) to execute only the failed steps.
   *
   */
  "isIgnoreErrorsEnabled"?: boolean;
  /**
   * The seed value to be used in case of Deterministic Encryption and Deterministic Substitution masking formats.
   */
  "seed"?: string;
  /**
   * Indicates if the interim DMASK tables should be moved to the user-specified tablespace. As interim tables can be large in size,
   * set it to false if moving them causes performance overhead during masking.
   *
   */
  "isMoveInterimTablesEnabled"?: boolean;
  /**
   * Indicates if data masking should be performed using a saved masking script. Setting this attribute to true skips masking script
   * generation and executes the masking script stored in the Data Safe repository. It helps save time if there are no changes in
   * the database tables and their dependencies.
   *
   */
  "isExecuteSavedScriptEnabled"?: boolean;
}

export namespace MaskDataDetails {
  export function getJsonObj(obj: MaskDataDetails): object {
    const jsonObj = { ...obj, ...{} };

    return jsonObj;
  }
  export function getDeserializedJsonObj(obj: MaskDataDetails): object {
    const jsonObj = { ...obj, ...{} };

    return jsonObj;
  }
}
