/**
 * Fusion Applications Environment Management API
 * Use the Fusion Applications Environment Management API to manage the environments where your Fusion Applications run. For more information, see the [Fusion Applications Environment Management documentation](/iaas/Content/Identity/fusion-applications/home.htm).
 * OpenAPI spec version: 20211201
 *
 *
 * NOTE: This class is auto generated by OracleSDKGenerator.
 * Do not edit the class manually.
 *
 * Copyright (c) 2020, 2022, Oracle and/or its affiliates.  All rights reserved.
 * This software is dual-licensed to you under the Universal Permissive License (UPL) 1.0 as shown at https://oss.oracle.com/licenses/upl or Apache License 2.0 as shown at http://www.apache.org/licenses/LICENSE-2.0. You may choose either license.
 */

import * as model from "../model";
import common = require("oci-common");

/**
 * Information about the service attachment.
 */
export interface CreateServiceAttachmentDetails {
  "action": string;
}

export namespace CreateServiceAttachmentDetails {
  export function getJsonObj(obj: CreateServiceAttachmentDetails): object {
    const jsonObj = { ...obj, ...{} };

    if (obj && "action" in obj && obj.action) {
      switch (obj.action) {
        case "ATTACH_EXISTING_INSTANCE":
          return model.AttachExistingInstanceDetails.getJsonObj(
            <model.AttachExistingInstanceDetails>(<object>jsonObj),
            true
          );
        case "CREATE_NEW_INSTANCE":
          return model.CreateNewInstanceDetails.getJsonObj(
            <model.CreateNewInstanceDetails>(<object>jsonObj),
            true
          );
        default:
          if (common.LOG.logger) common.LOG.logger.info(`Unknown value for: ${obj.action}`);
      }
    }
    return jsonObj;
  }
  export function getDeserializedJsonObj(obj: CreateServiceAttachmentDetails): object {
    const jsonObj = { ...obj, ...{} };

    if (obj && "action" in obj && obj.action) {
      switch (obj.action) {
        case "ATTACH_EXISTING_INSTANCE":
          return model.AttachExistingInstanceDetails.getDeserializedJsonObj(
            <model.AttachExistingInstanceDetails>(<object>jsonObj),
            true
          );
        case "CREATE_NEW_INSTANCE":
          return model.CreateNewInstanceDetails.getDeserializedJsonObj(
            <model.CreateNewInstanceDetails>(<object>jsonObj),
            true
          );
        default:
          if (common.LOG.logger) common.LOG.logger.info(`Unknown value for: ${obj.action}`);
      }
    }
    return jsonObj;
  }
}
