/**
 * Data Connectivity Management API
 * Use the Data Connectivity Management Service APIs to perform common extract, load, and transform (ETL) tasks.
 * OpenAPI spec version: 20210217
 * Contact: di_dcms_dev_ww_grp@oracle.com
 *
 * NOTE: This class is auto generated by OracleSDKGenerator.
 * Do not edit the class manually.
 *
 * Copyright (c) 2020, 2022, Oracle and/or its affiliates.  All rights reserved.
 * This software is dual-licensed to you under the Universal Permissive License (UPL) 1.0 as shown at https://oss.oracle.com/licenses/upl or Apache License 2.0 as shown at http://www.apache.org/licenses/LICENSE-2.0. You may choose either license.
 */

import * as model from "../model";
import common = require("oci-common");

/**
 * A summary of profiling results of a specific attribute.
 */
export interface NumericAttribute extends model.AttributeProfileResult {
  "mean"?: model.ProfileStat;
  "median"?: model.ProfileStat;
  "standardDeviation"?: model.ProfileStat;
  "variance"?: model.ProfileStat;
  "outlier"?: model.Outlier;
  "histogram"?: model.Histogram;
  /**
   * Pattern frequencies for the column as described already in profile config.
   */
  "patternFrequencies"?: Array<model.ObjectFreqStat>;

  "type": string;
}

export namespace NumericAttribute {
  export function getJsonObj(obj: NumericAttribute, isParentJsonObj?: boolean): object {
    const jsonObj = {
      ...(isParentJsonObj
        ? obj
        : (model.AttributeProfileResult.getJsonObj(obj) as NumericAttribute)),
      ...{
        "mean": obj.mean ? model.ProfileStat.getJsonObj(obj.mean) : undefined,
        "median": obj.median ? model.ProfileStat.getJsonObj(obj.median) : undefined,
        "standardDeviation": obj.standardDeviation
          ? model.ProfileStat.getJsonObj(obj.standardDeviation)
          : undefined,
        "variance": obj.variance ? model.ProfileStat.getJsonObj(obj.variance) : undefined,
        "outlier": obj.outlier ? model.Outlier.getJsonObj(obj.outlier) : undefined,
        "histogram": obj.histogram ? model.Histogram.getJsonObj(obj.histogram) : undefined,
        "patternFrequencies": obj.patternFrequencies
          ? obj.patternFrequencies.map(item => {
              return model.ObjectFreqStat.getJsonObj(item);
            })
          : undefined
      }
    };

    return jsonObj;
  }
  export const type = "NUMERIC";
  export function getDeserializedJsonObj(obj: NumericAttribute, isParentJsonObj?: boolean): object {
    const jsonObj = {
      ...(isParentJsonObj
        ? obj
        : (model.AttributeProfileResult.getDeserializedJsonObj(obj) as NumericAttribute)),
      ...{
        "mean": obj.mean ? model.ProfileStat.getDeserializedJsonObj(obj.mean) : undefined,
        "median": obj.median ? model.ProfileStat.getDeserializedJsonObj(obj.median) : undefined,
        "standardDeviation": obj.standardDeviation
          ? model.ProfileStat.getDeserializedJsonObj(obj.standardDeviation)
          : undefined,
        "variance": obj.variance
          ? model.ProfileStat.getDeserializedJsonObj(obj.variance)
          : undefined,
        "outlier": obj.outlier ? model.Outlier.getDeserializedJsonObj(obj.outlier) : undefined,
        "histogram": obj.histogram
          ? model.Histogram.getDeserializedJsonObj(obj.histogram)
          : undefined,
        "patternFrequencies": obj.patternFrequencies
          ? obj.patternFrequencies.map(item => {
              return model.ObjectFreqStat.getDeserializedJsonObj(item);
            })
          : undefined
      }
    };

    return jsonObj;
  }
}
