/**
 * Data Connectivity Management API
 * Use the Data Connectivity Management Service APIs to perform common extract, load, and transform (ETL) tasks.
 * OpenAPI spec version: 20210217
 * Contact: di_dcms_dev_ww_grp@oracle.com
 *
 * NOTE: This class is auto generated by OracleSDKGenerator.
 * Do not edit the class manually.
 *
 * Copyright (c) 2020, 2022, Oracle and/or its affiliates.  All rights reserved.
 * This software is dual-licensed to you under the Universal Permissive License (UPL) 1.0 as shown at https://oss.oracle.com/licenses/upl or Apache License 2.0 as shown at http://www.apache.org/licenses/LICENSE-2.0. You may choose either license.
 */

import * as model from "../model";
import common = require("oci-common");

/**
 * A summary of profiling results of a specefic attribute.
 */
export interface StringAttribute extends model.AttributeProfileResult {
  "minLength"?: model.ProfileStat;
  "maxLength"?: model.ProfileStat;
  "meanLength"?: model.ProfileStat;
  /**
   * Pattern frequencies for the column as described in the profile config.
   */
  "patternFrequencies"?: Array<model.ObjectFreqStat>;
  /**
   * Inferred DataType for the column.
   */
  "inferredDataTypes"?: Array<model.DataTypeStat>;

  "type": string;
}

export namespace StringAttribute {
  export function getJsonObj(obj: StringAttribute, isParentJsonObj?: boolean): object {
    const jsonObj = {
      ...(isParentJsonObj
        ? obj
        : (model.AttributeProfileResult.getJsonObj(obj) as StringAttribute)),
      ...{
        "minLength": obj.minLength ? model.ProfileStat.getJsonObj(obj.minLength) : undefined,
        "maxLength": obj.maxLength ? model.ProfileStat.getJsonObj(obj.maxLength) : undefined,
        "meanLength": obj.meanLength ? model.ProfileStat.getJsonObj(obj.meanLength) : undefined,
        "patternFrequencies": obj.patternFrequencies
          ? obj.patternFrequencies.map(item => {
              return model.ObjectFreqStat.getJsonObj(item);
            })
          : undefined,
        "inferredDataTypes": obj.inferredDataTypes
          ? obj.inferredDataTypes.map(item => {
              return model.DataTypeStat.getJsonObj(item);
            })
          : undefined
      }
    };

    return jsonObj;
  }
  export const type = "STRING";
  export function getDeserializedJsonObj(obj: StringAttribute, isParentJsonObj?: boolean): object {
    const jsonObj = {
      ...(isParentJsonObj
        ? obj
        : (model.AttributeProfileResult.getDeserializedJsonObj(obj) as StringAttribute)),
      ...{
        "minLength": obj.minLength
          ? model.ProfileStat.getDeserializedJsonObj(obj.minLength)
          : undefined,
        "maxLength": obj.maxLength
          ? model.ProfileStat.getDeserializedJsonObj(obj.maxLength)
          : undefined,
        "meanLength": obj.meanLength
          ? model.ProfileStat.getDeserializedJsonObj(obj.meanLength)
          : undefined,
        "patternFrequencies": obj.patternFrequencies
          ? obj.patternFrequencies.map(item => {
              return model.ObjectFreqStat.getDeserializedJsonObj(item);
            })
          : undefined,
        "inferredDataTypes": obj.inferredDataTypes
          ? obj.inferredDataTypes.map(item => {
              return model.DataTypeStat.getDeserializedJsonObj(item);
            })
          : undefined
      }
    };

    return jsonObj;
  }
}
