/**
 * Data Connectivity Management API
 * Use the Data Connectivity Management Service APIs to perform common extract, load, and transform (ETL) tasks.
 * OpenAPI spec version: 20210217
 * Contact: di_dcms_dev_ww_grp@oracle.com
 *
 * NOTE: This class is auto generated by OracleSDKGenerator.
 * Do not edit the class manually.
 *
 * Copyright (c) 2020, 2022, Oracle and/or its affiliates.  All rights reserved.
 * This software is dual-licensed to you under the Universal Permissive License (UPL) 1.0 as shown at https://oss.oracle.com/licenses/upl or Apache License 2.0 as shown at http://www.apache.org/licenses/LICENSE-2.0. You may choose either license.
 */

import * as model from "../model";
import common = require("oci-common");

/**
 * Information about the object and its parent.
 */
export interface RegistryMetadata {
  /**
   * The owning object's key for this object.
   */
  "aggregatorKey"?: string;
  /**
   * Labels are keywords or labels that you can add to data assets, dataflows, and so on. You can define your own labels and use them to categorize content.
   */
  "labels"?: Array<string>;
  /**
   * The registry version. Note: Numbers greater than Number.MAX_SAFE_INTEGER will result in rounding issues.
   */
  "registryVersion"?: number;
  /**
   * The identifying key for the object.
   */
  "key"?: string;
  /**
   * Specifies whether the object is a favorite.
   */
  "isFavorite"?: boolean;
  /**
   * The ID of the user who created the object.
   */
  "createdByUserId"?: string;
  /**
   * The name of the user who created the object.
   */
  "createdByUserName"?: string;
  /**
   * The ID of the user who updated the object.
   */
  "updatedByUserId"?: string;
  /**
   * The name of the user who updated the object.
   */
  "updatedByUserName"?: string;
  /**
   * The date and time that the object was created.
   */
  "timeCreated"?: Date;
  /**
   * The date and time that the object was updated.
   */
  "timeUpdated"?: Date;
}

export namespace RegistryMetadata {
  export function getJsonObj(obj: RegistryMetadata): object {
    const jsonObj = { ...obj, ...{} };

    return jsonObj;
  }
  export function getDeserializedJsonObj(obj: RegistryMetadata): object {
    const jsonObj = { ...obj, ...{} };

    return jsonObj;
  }
}
