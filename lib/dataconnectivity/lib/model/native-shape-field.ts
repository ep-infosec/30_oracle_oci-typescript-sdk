/**
 * Data Connectivity Management API
 * Use the Data Connectivity Management Service APIs to perform common extract, load, and transform (ETL) tasks.
 * OpenAPI spec version: 20210217
 * Contact: di_dcms_dev_ww_grp@oracle.com
 *
 * NOTE: This class is auto generated by OracleSDKGenerator.
 * Do not edit the class manually.
 *
 * Copyright (c) 2020, 2022, Oracle and/or its affiliates.  All rights reserved.
 * This software is dual-licensed to you under the Universal Permissive License (UPL) 1.0 as shown at https://oss.oracle.com/licenses/upl or Apache License 2.0 as shown at http://www.apache.org/licenses/LICENSE-2.0. You may choose either license.
 */

import * as model from "../model";
import common = require("oci-common");

/**
 * The native shape field object.
 */
export interface NativeShapeField extends model.TypedObject {
  /**
   * The type reference.
   */
  "type": any;
  /**
   * The position of the attribute. Note: Numbers greater than Number.MAX_SAFE_INTEGER will result in rounding issues.
   */
  "position"?: number;
  /**
   * The default value.
   */
  "defaultValueString"?: string;
  /**
   * Specifies whether the field is mandatory.
   */
  "isMandatory"?: boolean;

  "modelType": string;
}

export namespace NativeShapeField {
  export function getJsonObj(obj: NativeShapeField, isParentJsonObj?: boolean): object {
    const jsonObj = {
      ...(isParentJsonObj ? obj : (model.TypedObject.getJsonObj(obj) as NativeShapeField)),
      ...{}
    };

    return jsonObj;
  }
  export const modelType = "NATIVE_SHAPE_FIELD";
  export function getDeserializedJsonObj(obj: NativeShapeField, isParentJsonObj?: boolean): object {
    const jsonObj = {
      ...(isParentJsonObj
        ? obj
        : (model.TypedObject.getDeserializedJsonObj(obj) as NativeShapeField)),
      ...{}
    };

    return jsonObj;
  }
}
