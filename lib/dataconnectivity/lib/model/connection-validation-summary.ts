/**
 * Data Connectivity Management API
 * Use the Data Connectivity Management Service APIs to perform common extract, load, and transform (ETL) tasks.
 * OpenAPI spec version: 20210217
 * Contact: di_dcms_dev_ww_grp@oracle.com
 *
 * NOTE: This class is auto generated by OracleSDKGenerator.
 * Do not edit the class manually.
 *
 * Copyright (c) 2020, 2022, Oracle and/or its affiliates.  All rights reserved.
 * This software is dual-licensed to you under the Universal Permissive License (UPL) 1.0 as shown at https://oss.oracle.com/licenses/upl or Apache License 2.0 as shown at http://www.apache.org/licenses/LICENSE-2.0. You may choose either license.
 */

import * as model from "../model";
import common = require("oci-common");

/**
 * The information about connection validation.
 */
export interface ConnectionValidationSummary {
  "validationMessage"?: model.Message;
  /**
   * Objects will use a 36 character key as unique ID. It is system generated and cannot be modified.
   */
  "key"?: string;
  /**
   * The type of the object.
   */
  "modelType": string;
  /**
   * The model version of an object.
   */
  "modelVersion"?: string;
  "parentRef"?: model.ParentReference;
  /**
   * Free form text without any restriction on the permitted characters. Name can have letters, numbers, and special characters. The value is editable and is restricted to 1000 characters.
   */
  "name"?: string;
  /**
   * Detailed description of the object.
   */
  "description"?: string;
  /**
   * The version of the object that is used to track changes in the object instance. Note: Numbers greater than Number.MAX_SAFE_INTEGER will result in rounding issues.
   */
  "objectVersion"?: number;
  /**
   * The status of an object that can be set to value 1 for shallow references across objects, other values reserved. Note: Numbers greater than Number.MAX_SAFE_INTEGER will result in rounding issues.
   */
  "objectStatus"?: number;
  "registryMetadata"?: model.RegistryMetadata;
  "connection"?: model.CreateConnectionDetails;
  "dataAsset"?: model.CreateDataAssetDetails;
  /**
   * Value can only contain upper case letters, underscore, and numbers. It should begin with an upper case letter or underscore. The value can be modified.
   */
  "identifier"?: string;
  "metadata"?: model.ObjectMetadata;
}

export namespace ConnectionValidationSummary {
  export function getJsonObj(obj: ConnectionValidationSummary): object {
    const jsonObj = {
      ...obj,
      ...{
        "validationMessage": obj.validationMessage
          ? model.Message.getJsonObj(obj.validationMessage)
          : undefined,

        "parentRef": obj.parentRef ? model.ParentReference.getJsonObj(obj.parentRef) : undefined,

        "registryMetadata": obj.registryMetadata
          ? model.RegistryMetadata.getJsonObj(obj.registryMetadata)
          : undefined,
        "connection": obj.connection
          ? model.CreateConnectionDetails.getJsonObj(obj.connection)
          : undefined,
        "dataAsset": obj.dataAsset
          ? model.CreateDataAssetDetails.getJsonObj(obj.dataAsset)
          : undefined,

        "metadata": obj.metadata ? model.ObjectMetadata.getJsonObj(obj.metadata) : undefined
      }
    };

    return jsonObj;
  }
  export function getDeserializedJsonObj(obj: ConnectionValidationSummary): object {
    const jsonObj = {
      ...obj,
      ...{
        "validationMessage": obj.validationMessage
          ? model.Message.getDeserializedJsonObj(obj.validationMessage)
          : undefined,

        "parentRef": obj.parentRef
          ? model.ParentReference.getDeserializedJsonObj(obj.parentRef)
          : undefined,

        "registryMetadata": obj.registryMetadata
          ? model.RegistryMetadata.getDeserializedJsonObj(obj.registryMetadata)
          : undefined,
        "connection": obj.connection
          ? model.CreateConnectionDetails.getDeserializedJsonObj(obj.connection)
          : undefined,
        "dataAsset": obj.dataAsset
          ? model.CreateDataAssetDetails.getDeserializedJsonObj(obj.dataAsset)
          : undefined,

        "metadata": obj.metadata
          ? model.ObjectMetadata.getDeserializedJsonObj(obj.metadata)
          : undefined
      }
    };

    return jsonObj;
  }
}
