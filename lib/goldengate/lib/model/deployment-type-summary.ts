/**
 * GoldenGate API
 * Use the Oracle Cloud Infrastructure GoldenGate APIs to perform data replication operations.

 * OpenAPI spec version: 20200407
 * 
 *
 * NOTE: This class is auto generated by OracleSDKGenerator.
 * Do not edit the class manually.
 *
 * Copyright (c) 2020, 2022, Oracle and/or its affiliates.  All rights reserved.
 * This software is dual-licensed to you under the Universal Permissive License (UPL) 1.0 as shown at https://oss.oracle.com/licenses/upl or Apache License 2.0 as shown at http://www.apache.org/licenses/LICENSE-2.0. You may choose either license.
 */

import * as model from "../model";
import common = require("oci-common");

/**
 * The meta-data specific on particular deployment type represented by deploymentType field.
 *
 */
export interface DeploymentTypeSummary {
  /**
   * The deployment category defines the broad separation of the deployment type into categories.  Currently
   * the separation is 'DATA_REPLICATION' and 'STREAM_ANALYTICS'.
   *
   */
  "category": DeploymentTypeSummary.Category;
  /**
   * An object's Display Name.
   *
   */
  "displayName": string;
  /**
   * The type of deployment, the value determines the exact 'type' of service executed in the Deployment.
   * NOTE: Use of the value 'OGG' is maintained for backward compatibility purposes.  Its use is discouraged
   *       in favor of the equivalent 'DATABASE_ORACLE' value.
   *
   */
  "deploymentType": model.DeploymentType;
  /**
   * An array of connectionTypes.
   *
   */
  "connectionTypes"?: Array<DeploymentTypeSummary.ConnectionTypes>;
  /**
   * List of the supported technologies generally.  The value is a freeform text string generally consisting
   * of a description of the technology and optionally the speific version(s) support.  For example,
   * [ \"Oracle Database 19c\", \"Oracle Exadata\", \"OCI Streaming\" ]
   *
   */
  "sourceTechnologies"?: Array<string>;
  /**
   * List of the supported technologies generally.  The value is a freeform text string generally consisting
   * of a description of the technology and optionally the speific version(s) support.  For example,
   * [ \"Oracle Database 19c\", \"Oracle Exadata\", \"OCI Streaming\" ]
   *
   */
  "targetTechnologies"?: Array<string>;
}

export namespace DeploymentTypeSummary {
  export enum Category {
    DataReplication = "DATA_REPLICATION",
    StreamAnalytics = "STREAM_ANALYTICS",
    /**
     * This value is used if a service returns a value for this enum that is not recognized by this
     * version of the SDK.
     */
    UnknownValue = "UNKNOWN_VALUE"
  }

  export enum ConnectionTypes {
    Goldengate = "GOLDENGATE",
    Kafka = "KAFKA",
    Mysql = "MYSQL",
    OciObjectStorage = "OCI_OBJECT_STORAGE",
    Oracle = "ORACLE",
    /**
     * This value is used if a service returns a value for this enum that is not recognized by this
     * version of the SDK.
     */
    UnknownValue = "UNKNOWN_VALUE"
  }

  export function getJsonObj(obj: DeploymentTypeSummary): object {
    const jsonObj = { ...obj, ...{} };

    return jsonObj;
  }
  export function getDeserializedJsonObj(obj: DeploymentTypeSummary): object {
    const jsonObj = { ...obj, ...{} };

    return jsonObj;
  }
}
